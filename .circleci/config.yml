#Alfredo Moreira
#Put this file in a .circleci/ folder
#This file is to be used to run Github Status Checks
version: 2.1
orbs:
  node: circleci/node@3.0.0
  codecov: codecov/codecov@1.1.3
  jq: circleci/jq@2.2.0
  sonarcloud: sonarsource/sonarcloud@1.0.3
jobs:
  linting:
    docker:
      - image: cimg/node:16.12.0
    working_directory: ~/catalog
    steps:
      - checkout
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Install Packages
          command: yarn install
      #save cache for use next tests
      - save_cache:
         paths:
          - node_modules
          - "~./cache/Cypress"
         key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: EsLint Source Code 
          command: npx eslint 
      - run:
          name: EsLint Cypress 
          command: npx eslint

  build:
    docker:
      - image: cimg/node:16.12.0
    working_directory: ~/catalog
    steps:
      - checkout
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Install Packages
          command: yarn install
      #save cache for use next tests
      - save_cache:
         paths:
          - node_modules
          - "~./cache/Cypress"
         key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Compile Binary
          command: yarn build
          environment:
            CI: 'false'
  
  e2e:
    parameters:
      group:
             type: integer
             default: 1
      group_name:
              type: string
              default: group
    environment:
      GROUP: << parameters.group >>
      GROUP_NAME: << parameters.group_name >>
    docker:
      - image: cypress/base:16.13.0
        environment:
          TERM: xterm
      #MongoDB
      - image: mongo:4.4.10
        environment:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: asylum-connect
    steps:
      - checkout:
          path: catalog
      - jq/install
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Print API branch
          command: echo "Pulling branch $(jq -r '.api_ci_branch' catalog/cypress.env.json) from catalog-api"
      - run:
          name: Pull API code
          command: git clone --branch $(jq -r '.api_ci_branch' catalog/cypress.env.json) https://github.com/asylum-connect/catalog-api.git
      - run: 
          name: Create API Env File
          command: |
           cd catalog-api && cat \<< EOF > ./.env
           MAILGUN_API_KEY=$MAILGUN_API_KEY
           MAILGUN_DOMAIN=$MAILGUN_DOMAIN
           DB_URI=$DB_URI_STAGING
           ENV=TEST
           SHEETS_API_KEY=$SHEETS_API_KEY
           TEST_DB_URI=$TEST_DB_URI
           EOF
      - run:
          name: Install API Packages
          command: cd catalog-api && yarn install
      - run:
          name: "Seed Docker DB"
          command: cd catalog-api && yarn seed-docker-db
      - run:
          name: Install Control Panel Packages
          command: cd catalog && yarn install
      - run:
          name: Instantiate API And Run E2E tests
          command: (cd catalog-api && yarn dev-background) && (cd catalog && yarn test:pre-e2e && yarn test:e2e:ci:local)
      - run:
          name: "Show Coverage"
          command: "cd catalog && yarn show-coverage"
      - run:
          name: "Generate Report"
          command: "cd catalog && yarn report:combined"
      - run:
          environment:
            GROUP: << parameters.group >>
          name: "Generate Report lcov"
          command: "cd catalog && yarn report:lcov"
      - codecov/upload:
          file: 'catalog/coverageReports/coverage-final.json'
          flags: 'Integration'
      - store_artifacts:
          path: ./catalog/lcov<< parameters.group >>/lcov.info
          destination: lcov<< parameters.group >>.info
  sonar:
    docker:
      - image: cypress/base:16.13.0
    steps:
      - checkout
      #Install dependencies
      - run: 
         name: "Install dependencies"
         command: yarn add lcov-result-merger axios --dev
      #Download artifacts
      - run:
          name: "Download reports"
          command: cd .circleci && node getLcovReports.js
      - run: 
         name: "Merge Records"
         command: ./node_modules/.bin/lcov-result-merger 'lcov-*.info' 'merged-lcov.info'
      - sonarcloud/scan

workflows:
  version: 2
  development:
    jobs:
      - linting:
          filters:
            branches:
              only: dev
      - build:
          filters:
            branches:
              only: dev
      - e2e:
         name: e2e-1
         group: 1
         group_name: group1
         filters:
            branches:
              only: dev
      - e2e:
         name: e2e-2
         group: 2
         group_name: group2
         filters:
            branches:
              only: dev
      - e2e:
         name: e2e-3
         group: 3
         group_name: group3
         filters:
            branches:
              only: dev
      - e2e:
         name: e2e-4
         group: 4
         group_name: group4
         filters:
            branches:
              only: dev
      - sonar:
          context: SonarCloud
          requires:
            - e2e-1
            - e2e-2
            - e2e-3
            - e2e-4
          filters:
            branches:
              only: dev

  pull_request:
    jobs: 
      - linting:
          filters:
            branches:
              ignore: [main,dev]
      - build:
          filters:
            branches:
              ignore: [main,dev]
      - e2e:
          name: e2e-1
          group: 1
          group_name: group1
          filters:
            branches:
              ignore: [main,dev]
      - e2e:
          name: e2e-2
          group: 2
          group_name: group2
          filters:
            branches:
              ignore: [main,dev]

      - e2e:
          name: e2e-3
          group: 3
          group_name: group3
          filters:
            branches:
              ignore: [main,dev]

      - e2e:
          name: e2e-4
          group: 4
          group_name: group4
          filters:
            branches:
              ignore: [main,dev]

      - sonar:
          context: SonarCloud
          requires:
            - e2e-1
            - e2e-2
            - e2e-3
            - e2e-4
          filters:
            branches:
              ignore: [main,dev]