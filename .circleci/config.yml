#Alfredo Moreira
#Put this file in a .circleci/ folder
#This file is to be used to run Github Status Checks
version: 2.1
orbs:
  node: circleci/node@3.0.0
  codecov: codecov/codecov@1.1.3
  jq: circleci/jq@2.2.0
jobs:
  build:
    docker:
      - image: cimg/node:16.12.0
    working_directory: ~/control-panel
    steps:
      - checkout
      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "package.json" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Install Packages
          command: yarn install
      #save cache for use next tests
      - save_cache:
         paths:
          - node_modules
          - "~./cache/Cypress"
         key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Compile Binary
          command: yarn build
          environment:
            CI: 'false'
  
  e2e:
    parameters:
      group:
             type: integer
             default: 1
      group_name:
              type: string
              default: group
    environment:
      GROUP: << parameters.group >>
    docker:
      - image: cypress/base:16.5.0
        environment:
          TERM: xterm
      #MongoDB
      - image: mongo:4.4.10
        environment:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: asylum-connect
    steps:
      - checkout:
          path: catalog
      - jq/install
      - run: 
          name: Check Node Version
          command: node --version
      - run:
          name: Print API branch
          command: echo "Pulling branch $(jq -r '.api_ci_branch' catalog/cypress.env.json) from catalog-api"
      - run:
          name: Pull API code
          command: git clone --branch $(jq -r '.api_ci_branch' catalog/cypress.env.json) https://github.com/asylum-connect/catalog-api.git
      - run: 
          name: Create API Env File
          command: |
           cd catalog-api && cat \<< EOF > ./.env
           MAILGUN_API_KEY=$MAILGUN_API_KEY
           MAILGUN_DOMAIN=$MAILGUN_DOMAIN
           DB_URI=$DB_URI_STAGING
           ENV=TEST
           SHEETS_API_KEY=$SHEETS_API_KEY
           TEST_DB_URI=$TEST_DB_URI
           EOF
      - run:
          name: Install API Packages
          command: cd catalog-api && yarn install
      - run:
          name: "Seed Docker DB"
          command: cd catalog-api && yarn seed-docker-db
      - run:
          name: Install Control Panel Packages
          command: cd catalog && yarn install
      - run:
          name: Instantiate API And Run E2E tests
          command: (cd catalog-api && yarn dev-background) && (cd catalog && yarn test:pre-e2e && yarn test:e2e:ci:local)
      - run:
          name: "Show Coverage"
          command: "yarn show-coverage"
      - codecov/upload:
          file: 'catalog/cypressCoverage/coverage-final.json'
          flags: 'Integration'
      - run:
          name: "Post E2E Commands"
          command: "yarn test:post-e2e"
      - store_artifacts:
          path: ./cypressCoverage
          destination: E2E Coverage Reports
      - store_artifacts:
          path: "reports/"
          destination: E2E Test Reports
      - store_artifacts:
          path: ./cypress/screenshots
          destination: E2E Screenshots
      - store_artifacts:
          path: ./cypress/videos
          destination: E2E Videos 

workflows:
  version: 1
  pull_request:
    jobs: 
      - build
      - e2e:
          group: 1
          group_name: group1
      - e2e: 
          group: 2
          group_name: group2
      